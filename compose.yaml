services:
  nginx:
    build:
      context: ./nginx
    restart: always
    volumes:
      - static_volume:/app/staticfiles:ro  # read-only volume
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - appnet

  web:
    build:
      context: .
    restart: on-failure
    container_name: web
    volumes:
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet

  db:
    image: postgres:16.9
    container_name: postgres-db
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet

volumes:
  static_volume:
  db_data:

networks:
  appnet:
    driver: bridge